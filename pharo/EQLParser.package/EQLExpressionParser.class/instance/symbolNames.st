generated
symbolNames
	^ #('">="' '"|"' '"<="' '">"' '"!="' '"<"' '"^"' '"&"' '"=="' '"/"' '"%"' '"-"' '"years"' '">>"' '"+"' '"&&"' '"<<"' '"**"' '"^="' '"&="' '"="' '"|="' '")"' '","' '"<<="' '">>="' '"*"' '":"' '"?"' '"/="' '"%="' '"-="' '"*="' '"||"' '"+="' '"++"' '"like"' '"]"' '"--"' '"or"' '"Date"' '"Now"' '"wei"' '"szabo"' '"limit"' '"days"' '"weeks"' '"minutes"' '"hours"' '"ether"' '"seconds"' '"and"' '"finney"' '"by"' '"("' '"."' '"~"' '"order"' '"delete"' '"!"' '"select"' '"["' '"create"' '"in"' '"where"' '"domain"' '"from"' '"{"' '"}"' '"buffer"' '<decimalnumber>' '<hexnumber>' '<realnumber>' '<hexliteral>' '<booleanliteral>' '<identifier>' '<url>' '<nestedids>' '<whitespace>' '<stringLiteral>' '<comment>' '( DomainStatement)?' 'WhereStatement' '( WhereStatement)' '( WhereStatement)?' 'OrderByStatement' '( OrderByStatement)' '( OrderByStatement)?' 'LimitStatement' '( DomainStatement)' '( LimitStatement)?' 'FromStatement' 'ExpressionList' 'SourceList' 'CreateStatement' '( "," SourceBind)' '( "," SourceBind)*' 'Expression' 'SelectStatement' '( LimitStatement)' 'StringDate' 'NowDate' 'Date' 'BooleanOperation' 'CompareOperation' 'TermExpression' 'ParenthesisBooleanExpression' 'ParenthesisCompareExpression' '( BooleanOperation CompareOperation TermExpression ParenthesisBooleanExpression ParenthesisCompareExpression)' 'BooleanOperable' 'NotOperation' 'OrOperation' 'AndOperation' '( "&&" "and")' '( "||" "or")' '( "!" "~")' 'ArithmeticOperation' 'ParenthesisArithmeticExpression' '( ArithmeticOperation TermExpression ParenthesisArithmeticExpression Date)' 'ArithmeticallyOperable' 'NegativeOperation' 'PowerOperation' 'MultiplyOperation' 'DivideOperation' 'ModuleOperation' '( MultiplyOperation DivideOperation ModuleOperation)' 'SumOperation' 'SubstractOperation' '( SumOperation SubstractOperation)' 'ComparisionOperable' 'LesserThanOperation' 'LesserEqualsThanOperation' 'GreaterThanOperation' 'GreaterEqualsThanOperation' '( LesserThanOperation LesserEqualsThanOperation GreaterThanOperation GreaterEqualsThanOperation)' 'EqualsToOperation' 'DifferentThanOperation' 'LikeOperation' '( EqualsToOperation DifferentThanOperation LikeOperation)' '( "=")' 'AssignmentOperation' 'ParenthesisExpression' 'TupleExpression' 'B e g i n' 'NumberLiteral' 'RootQuery' 'MemberAccess' 'ArrayAccess' 'FunctionCall' '( Clause)*' '( "." <nestedids>)' '( "." <identifier>)' '( Expression)' '( Expression)?' '( "[" ( Expression)? "]")' '( ( "." <nestedids>) ( "." <identifier>) ( "[" ( Expression)? "]"))' '( ( "." <nestedids>) ( "." <identifier>) ( "[" ( Expression)? "]"))*' 'OptionalMemberArrayAccess' 'FunctionCallArguments' '( "(" FunctionCallArguments ")")' 'OptionalFunctionCall' '( Clause)' 'Clause' '( <realnumber> <hexnumber> <decimalnumber>)' 'NumberUnit' '( NumberUnit)' '( NumberUnit)?' '( "," ( Expression)?)' '( "," ( Expression)?)*' '( Expression ( "," ( Expression)?)*)' '( Expression ( "," ( Expression)?)*)?' '( "," ( Expression)?)+' 'FunctionCallName' '( FunctionCallName)' 'NameValueList' '( NameValueList)' '( NameValueList)?' '( ExpressionList)' '( ExpressionList)?' '( "," <identifier> ":" Expression)' '( "," <identifier> ":" Expression)*' '( ",")' '( ",")?' '( "," Expression)' '( "," Expression)*' 'E O F' 'error' 'DomainStatement' 'SourceBind')