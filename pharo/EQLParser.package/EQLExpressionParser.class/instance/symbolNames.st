generated
symbolNames
	^ #('"/"' '"*"' '"-"' '"%"' '">="' '"**"' '"+"' '"~"' '"!"' '"years"' '"<="' '"++"' '">"' '"--"' '"or"' '"||"' '":"' '"&&"' '")"' '"and"' '","' '"<"' '"<>"' '"="' '"["' '"=="' '"delete"' '"!="' '"szabo"' '"wei"' '"("' '"finney"' '"Now"' '"ether"' '"like"' '"weeks"' '"days"' '"hours"' '"]"' '"seconds"' '"Date"' '"minutes"' '"{"' '"buffer"' '"limit"' '"}"' '"."' '"create"' '"select"' '"by"' '"order"' '"where"' '"domain"' '"from"' '"in"' '<decimalnumber>' '<hexnumber>' '<realnumber>' '<hexliteral>' '<booleanliteral>' '<identifier>' '<url>' '<whitespace>' '<stringLiteral>' '<comment>' '( DomainStatement)' '( DomainStatement)?' 'WhereStatement' '( WhereStatement)' '( WhereStatement)?' 'OrderByStatement' '( OrderByStatement)' '( OrderByStatement)?' 'DomainStatement' '( LimitStatement)' '( LimitStatement)?' 'ExpressionList' 'CreateStatement' 'SourceList' 'SourceBind' 'SelectStatement' '( "," SourceBind)*' 'Expression' 'B e g i n' 'LimitStatement' 'StringDate' 'NowDate' 'Date' 'BooleanOperation' 'CompareOperation' 'TermExpression' 'ParenthesisBooleanExpression' 'ParenthesisCompareExpression' '( BooleanOperation CompareOperation TermExpression ParenthesisBooleanExpression ParenthesisCompareExpression)' 'BooleanOperable' 'NotOperation' 'OrOperation' 'AndOperation' '( "&&" "and")' '( "||" "or")' '( "!" "~")' 'ArithmeticOperation' 'ParenthesisArithmeticExpression' 'ArithmeticallyOperable' 'NegativeOperation' 'PowerOperation' 'MultiplyOperation' 'DivideOperation' 'ModuleOperation' 'SumOperation' 'SubstractOperation' '( ArithmeticOperation TermExpression ParenthesisArithmeticExpression Date)' 'ComparisionOperable' 'LesserThanOperation' 'LesserEqualsThanOperation' 'GreaterThanOperation' 'GreaterEqualsThanOperation' '( LesserThanOperation LesserEqualsThanOperation GreaterThanOperation GreaterEqualsThanOperation)' 'EqualsToOperation' 'DifferentThanOperation' 'LikeOperation' '( EqualsToOperation DifferentThanOperation LikeOperation)' '( "==" "=")' '( "!=" "<>")' 'ParenthesisExpression' 'TupleExpression' '( "." <identifier> "[" Expression "]")' '( "." <identifier> "[" Expression "]")+' '( "." <identifier> "[" Expression "]")*' 'FunctionCallArguments' 'RootQuery' 'NumberLiteral' '( Clause)*' '( Clause)' 'Clause' '( <realnumber> <hexnumber> <decimalnumber>)' 'NumberUnit' '( NumberUnit)' '( NumberUnit)?' '( Expression)' '( Expression)?' '( "," ( Expression)?)' '( "," ( Expression)?)*' '( Expression ( "," ( Expression)?)*)' '( Expression ( "," ( Expression)?)*)?' '( "," ( Expression)?)+' 'NameValueList' '( NameValueList)' '( NameValueList)?' '( ExpressionList)' '( ExpressionList)?' '( "," <identifier> ":" Expression)' '( "," <identifier> ":" Expression)*' '( ",")' '( ",")?' '( "," Expression)' '( "," Expression)*' 'E O F' 'error' 'FromStatement' '( "," SourceBind)')